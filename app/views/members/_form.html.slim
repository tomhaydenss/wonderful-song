= simple_form_for @member do |f|
  - if @member.new_record?
    = f.association :ensemble, label: 'Núcleo', collection: EnsembleHelper.ensembles_as_grouped_options(@permitted_ensembles_only), as: :grouped_select, group_method: :last, include_blank: false
  - else
    = f.input :ensemble, label: 'Núcleo', readonly: true, input_html: { value: @member.ensemble&.name }
  = f.input :membership_id, label: 'Código de Membro', readonly: true, input_html: { tabindex: -1 }
  .form-group
    = label_tag 'member[name]' do
      abbr title="required" = '*'
      = ' Nome'
    = text_field_tag 'member[name]', (params[:name] || @member&.name), class: 'form-control', data: { autocomplete: memberships_autocomplete_membership_name_path, id_element: '#member_membership_id', update_elements: { name: '#member_name', email: '#member_email', birthdate: '#member_birthdate'} }
    - if @member.errors[:name].any?
      span.error = @member.errors['name'].join(' / ')
  = f.input :email, label: 'E-Mail', input_html: { maxlength: 100 }
  = f.input :joining_date, label: 'Data de ingresso no grupo', as: :date, html5: true
  = f.input :birthdate, label: 'Data de nascimento', as: :date, html5: true
  - if AccessAuthorizer.can_change_member_status?(@member, current_user)
    = f.association :status, label: 'Situação', collection: StatusHelper.status_available(current_user), label_method: :description, value_method: :id, include_blank: false
  = f.input :food_restrictions, label: 'Restrição alimentar', input_html: { maxlength: 100 }
  = f.input :additional_information, label: 'Informações adicionais', as: :text

  ul.nav.nav-tabs role='tablist'
    li.active
      = link_to 'Telefones', '#phones', id: 'tab_phone', data: { toggle: 'tab' }
    /li
      = link_to 'Endereços', '#addresses', id: 'tab_address', data: { toggle: 'tab' }
    /li
      = link_to 'Documentos', '#documents', id: 'tab_document', data: { toggle: 'tab' }

  .tab-content
    #phones.tab-pane.active role='tabpanel'
      = f.simple_fields_for :phones do |phone|
        = render 'phone_fields', f: phone
      .links
        = link_to_add_association f, :phones, class: 'btn btn-default btn-xs' do
          .glyphicon.glyphicon-plus =
          | Incluir novo Telefone

    /#addresses.tab-pane role='tabpanel'
      = f.simple_fields_for :addresses do |address|
        = render 'address_fields', f: address
      .links
        = link_to_add_association f, :addresses, class: 'btn btn-default btn-xs' do
          .glyphicon.glyphicon-plus
          | Incluir novo Endereço

    /#documents.tab-pane role='tabpanel'
      = f.simple_fields_for :identity_documents do |identity_document|
        = render 'identity_document_fields', f: identity_document
      .links
        = link_to_add_association f, :identity_documents, class: 'btn btn-default btn-xs' do
          .glyphicon.glyphicon-plus
          | Incluir novo Documento
  hr
  .actions
    = f.button :submit, 'Salvar', disable_with: 'Por favor aguarde ...'
    = link_to 'Voltar', back_button_action, class: 'btn btn-default'

- if @member.errors.keys.select { |k| k.to_s.include? 'phone' }.any?
  javascript:
    showTab('phone');
/- if @member.errors.keys.select { |k| k.to_s.include? 'address' }.any?
  javascript:
    showTab('address');
/- if @member.errors.keys.select { |k| k.to_s.include? 'document' }.any?
  javascript:
    showTab('document');
